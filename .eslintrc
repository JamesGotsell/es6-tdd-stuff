root: true

# use the babel-parser. eslint still lacks a lot of es6features for noe
parser: babel-eslint

# enables additional ecmascript features
ecmaFeatures:
  # add support for es6 modules. not sure if this is really necessary
  modules: true

# define environments
env:
  # all es6 except for modules?!
  es6: true
  # browser globals
  browser: true
  # commonjs for node
  # node: true
  # AMD globals for requirejs
  amd: true


globals:
  # for docs
  __DEV__: true
  __PROD__: true

extends:
    "eslint:recommended"


#  0: off, 1: warning, 2: error
rules:

    # section: possible errors
    comma-dangle: [2, "never"]
    no-cond-assign: 2
    no-console : 0
    no-constant-condition: 2
    no-control-regex: 1
    no-debugger: 0
    no-dupe-args: 2
    no-dupe-keys: 2
    no-empty-character-class: 1
    no-duplicate-case: 2
    no-empty: 2
    no-ex-assign: 1
    no-extra-boolean-cast: 0
    no-extra-parens: 0
    no-extra-semi: 2
    no-func-assign: 2
    no-inner-declarations: 2
    no-invalid-regexp: 2
    no-irregular-whitespace: 2
    no-negated-in-lhs: 0
    no-obj-calls: 2
    no-regex-spaces: 0
    no-sparse-arrays: 2
    no-unreachable: 2
    use-isnan: 2
    valid-jsdoc: 2
    valid-typeof: 2
    no-unexpected-multiline: 2

    # section: best practices
    accessor-pairs: 0
    block-scoped-var: 2
    complexity: 0
    consistent-return: 2
    curly: [2, "all"]
    default-case: 0
    dot-notation: 2
    dot-location: 0
    eqeqeq: [2, "smart"]
    guard-for-in: 0
    no-alert: 2
    no-caller: 0
    no-div-regex: 0
    no-else-return: 0
    no-empty-label: 0
    no-eq-null: 2
    no-eval: 2
    no-extend-native: 2
    no-extra-bind: 0
    no-fallthrough: 1
    no-floating-decimal: 2
    no-implicit-coercion: 2
    no-implied-eval: 2
    no-invalid-this: 2
    no-iterator: 2
    no-labels: 2
    no-lone-blocks: 2
    no-loop-func: 2
    no-multi-spaces: 0
    no-multi-str: 0
    no-native-reassign: 2
    no-new-func: 0
    no-new-wrappers: 1
    no-new: 2
    no-octal-escape: 0
    no-octal: 2
    no-param-reassign:  [2, { "props": false }]
    no-process-env: 2
    no-proto: 2
    no-redeclare: [2, { "builtinGlobals": true }]
    no-return-assign: 2
    no-script-url: 0
    no-self-compare: 0
    no-sequences: 2
    no-throw-literal: 0
    no-unused-expressions: 0
    no-useless-call: 0
    no-useless-concat: 2
    no-void: 0
    no-warning-comments: 0
    no-with: 2
    radix: 0
    vars-on-top: 2
    wrap-iife: [2, "inside"]
    yoda: 0

    # strict mode
    strict: [2, "global"]

    # Variables
    init-declarations: 0
    no-catch-shadow: 0
    no-delete-var: 2
    no-label-var: 0
    no-shadow-restricted-names: 2
    no-shadow: 2
    no-undef-init: 2
    no-undef: 2
    no-undefined: 2
    no-unused-vars: 2
    no-use-before-define: 2

    # Node.js and CommonJS
    callback-return: 2
    global-require: 2
    handle-callback-err: 2
    no-mixed-requires: 2
    no-new-require: 2
    no-path-concat: 0
    no-process-exit: 1
    no-restricted-modules: 0
    no-sync: 1


    # Stylistic Issues
    array-bracket-spacing: [2, "never"]
    block-spacing: [2, "always"]
    brace-style: [2, "1tbs", { "allowSingleLine": true }]
    camelcase: [2, {"properties": "always"}]
    comma-spacing: [2, {"before": false, "after": true}]
    comma-style: 0
    computed-property-spacing: 0
    consistent-this: 0
    eol-last: 0
    func-names: 0
    func-style: 0
    id-length: [2, {"min": 3, "max": 25, "properties": "never", "exceptions": [ "_i", "_j", "_k", "fs", "id"]}]
    id-match: 0
    indent: [2, "tab", {"SwitchCase": 1, "VariableDeclarator": 1}]
    # jsx-quotes: "prefer-double"
    key-spacing: [2, {"beforeColon": false, "afterColon": true, "mode": "strict"}]
    lines-around-comment: [2, { "beforeBlockComment": true, "afterBlockComment": false, "beforeLineComment": true, "afterLineComment": false, "allowBlockStart": true, "allowBlockEnd": true, "allowObjectStart": true, "allowObjectEnd": true }]
    linebreak-style: [2, "unix"]
    max-nested-callbacks: [2, 2]
    new-cap: 2
    new-parens: 2
    newline-after-var: [2, "always"]
    no-array-constructor: 2
    no-continue: 0
    no-inline-comments: 0
    no-lonely-if: 0
    no-mixed-spaces-and-tabs: 0
    no-multiple-empty-lines: 0
    no-nested-ternary: 2
    no-negated-condition: 0
    no-new-object: 2
    no-restricted-syntax: 0
    no-spaced-func: 0
    no-ternary: 0
    no-trailing-spaces: 0
    no-underscore-dangle: 0
    no-unneeded-ternary: 0
    object-curly-spacing: [2, "never"]
    one-var: [2, { var: "always", let: "always", const: "always" }]
    operator-assignment: 0
    operator-linebreak: 0
    padded-blocks: [2, "never"]
    quote-props: [2, "always"]
    quotes: [2, "double"]
    require-jsdoc: 2
    semi-spacing: [2, {"before": false, "after": true}]
    semi: [2, "always"]
    sort-vars: 0
    space-after-keywords: [2, "always"]
    space-before-keywords: [2, "always"]
    space-before-blocks: [2, "always"]
    space-before-function-paren: [2, "always"]
    space-in-parens: 0
    space-infix-ops: 2
    space-return-throw-case: 2
    space-unary-ops: 2
    spaced-comment: 0
    wrap-regex: 0


    # ECMAScript 6
    arrow-parens: 2
    arrow-spacing: 2
    constructor-super: 2
    generator-star-spacing: [2, {"before": false, "after": true}]
    no-class-assign: 2
    no-const-assign: 2
    no-dupe-class-members: 2
    no-this-before-super: 2
    no-var: 0
    object-shorthand: 0
    prefer-arrow-callback: 2
    prefer-const: 2
    prefer-spread: 2
    prefer-reflect: 1
    prefer-template: 2
    require-yield: 1

    # Legacy for eshint
    max-depth: 0
    max-len: 0
    max-params: 0
    max-statements: 0
    no-bitwise: 0
    no-plusplus: 0

